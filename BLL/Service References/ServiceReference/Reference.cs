//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Lumos.BLL.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobsetApiSoap", Namespace="http://tempuri.org/")]
    public partial class MobsetApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Sms_SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sms_GetRecvOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sms_GetReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sms_GetSignOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sms_GetBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Mms_UpFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback Mms_GetFileStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Mms_SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback Mms_GetReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Mms_GetRecvOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_UpFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_DelFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_SmsSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_GetSmsStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_SmsStopOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_SmsStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_MmsSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_GetMmsStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_MmsStopOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_MmsStartOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobsetApi() {
            this.Url = "http://sms3.mobset.com:8080/Api";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Sms_SendCompletedEventHandler Sms_SendCompleted;
        
        /// <remarks/>
        public event Sms_GetRecvCompletedEventHandler Sms_GetRecvCompleted;
        
        /// <remarks/>
        public event Sms_GetReportCompletedEventHandler Sms_GetReportCompleted;
        
        /// <remarks/>
        public event Sms_GetSignCompletedEventHandler Sms_GetSignCompleted;
        
        /// <remarks/>
        public event Sms_GetBalanceCompletedEventHandler Sms_GetBalanceCompleted;
        
        /// <remarks/>
        public event Mms_UpFileCompletedEventHandler Mms_UpFileCompleted;
        
        /// <remarks/>
        public event Mms_GetFileStatusCompletedEventHandler Mms_GetFileStatusCompleted;
        
        /// <remarks/>
        public event Mms_SendCompletedEventHandler Mms_SendCompleted;
        
        /// <remarks/>
        public event Mms_GetReportCompletedEventHandler Mms_GetReportCompleted;
        
        /// <remarks/>
        public event Mms_GetRecvCompletedEventHandler Mms_GetRecvCompleted;
        
        /// <remarks/>
        public event Task_UpFileCompletedEventHandler Task_UpFileCompleted;
        
        /// <remarks/>
        public event Task_DelFileCompletedEventHandler Task_DelFileCompleted;
        
        /// <remarks/>
        public event Task_SmsSendCompletedEventHandler Task_SmsSendCompleted;
        
        /// <remarks/>
        public event Task_GetSmsStatusCompletedEventHandler Task_GetSmsStatusCompleted;
        
        /// <remarks/>
        public event Task_SmsStopCompletedEventHandler Task_SmsStopCompleted;
        
        /// <remarks/>
        public event Task_SmsStartCompletedEventHandler Task_SmsStartCompleted;
        
        /// <remarks/>
        public event Task_MmsSendCompletedEventHandler Task_MmsSendCompleted;
        
        /// <remarks/>
        public event Task_GetMmsStatusCompletedEventHandler Task_GetMmsStatusCompleted;
        
        /// <remarks/>
        public event Task_MmsStopCompletedEventHandler Task_MmsStopCompleted;
        
        /// <remarks/>
        public event Task_MmsStartCompletedEventHandler Task_MmsStartCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sms_Send", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Count")]
        public long Sms_Send(long CorpID, string LoginName, string Password, string TimeStamp, string AddNum, string Timer, long LongSms, MobileListGroup[] MobileList, string Content, out string ErrMsg, out SmsIDGroup[] SmsIDList) {
            object[] results = this.Invoke("Sms_Send", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        AddNum,
                        Timer,
                        LongSms,
                        MobileList,
                        Content});
            ErrMsg = ((string)(results[1]));
            SmsIDList = ((SmsIDGroup[])(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Sms_SendAsync(long CorpID, string LoginName, string Password, string TimeStamp, string AddNum, string Timer, long LongSms, MobileListGroup[] MobileList, string Content) {
            this.Sms_SendAsync(CorpID, LoginName, Password, TimeStamp, AddNum, Timer, LongSms, MobileList, Content, null);
        }
        
        /// <remarks/>
        public void Sms_SendAsync(long CorpID, string LoginName, string Password, string TimeStamp, string AddNum, string Timer, long LongSms, MobileListGroup[] MobileList, string Content, object userState) {
            if ((this.Sms_SendOperationCompleted == null)) {
                this.Sms_SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSms_SendOperationCompleted);
            }
            this.InvokeAsync("Sms_Send", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        AddNum,
                        Timer,
                        LongSms,
                        MobileList,
                        Content}, this.Sms_SendOperationCompleted, userState);
        }
        
        private void OnSms_SendOperationCompleted(object arg) {
            if ((this.Sms_SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sms_SendCompleted(this, new Sms_SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sms_GetRecv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Count")]
        public long Sms_GetRecv(long CorpID, string LoginName, string Password, string TimeStamp, out string ErrMsg, out SmsRecvGroup[] SmsRecvList) {
            object[] results = this.Invoke("Sms_GetRecv", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp});
            ErrMsg = ((string)(results[1]));
            SmsRecvList = ((SmsRecvGroup[])(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Sms_GetRecvAsync(long CorpID, string LoginName, string Password, string TimeStamp) {
            this.Sms_GetRecvAsync(CorpID, LoginName, Password, TimeStamp, null);
        }
        
        /// <remarks/>
        public void Sms_GetRecvAsync(long CorpID, string LoginName, string Password, string TimeStamp, object userState) {
            if ((this.Sms_GetRecvOperationCompleted == null)) {
                this.Sms_GetRecvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSms_GetRecvOperationCompleted);
            }
            this.InvokeAsync("Sms_GetRecv", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp}, this.Sms_GetRecvOperationCompleted, userState);
        }
        
        private void OnSms_GetRecvOperationCompleted(object arg) {
            if ((this.Sms_GetRecvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sms_GetRecvCompleted(this, new Sms_GetRecvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sms_GetReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Count")]
        public long Sms_GetReport(long CorpID, string LoginName, string Password, string TimeStamp, out string ErrMsg, out SmsReportGroup[] SmsReportList) {
            object[] results = this.Invoke("Sms_GetReport", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp});
            ErrMsg = ((string)(results[1]));
            SmsReportList = ((SmsReportGroup[])(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Sms_GetReportAsync(long CorpID, string LoginName, string Password, string TimeStamp) {
            this.Sms_GetReportAsync(CorpID, LoginName, Password, TimeStamp, null);
        }
        
        /// <remarks/>
        public void Sms_GetReportAsync(long CorpID, string LoginName, string Password, string TimeStamp, object userState) {
            if ((this.Sms_GetReportOperationCompleted == null)) {
                this.Sms_GetReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSms_GetReportOperationCompleted);
            }
            this.InvokeAsync("Sms_GetReport", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp}, this.Sms_GetReportOperationCompleted, userState);
        }
        
        private void OnSms_GetReportOperationCompleted(object arg) {
            if ((this.Sms_GetReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sms_GetReportCompleted(this, new Sms_GetReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sms_GetSign", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrCode")]
        public long Sms_GetSign(long CorpID, string LoginName, string Password, string TimeStamp, out string ErrMsg, out string Sign) {
            object[] results = this.Invoke("Sms_GetSign", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp});
            ErrMsg = ((string)(results[1]));
            Sign = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Sms_GetSignAsync(long CorpID, string LoginName, string Password, string TimeStamp) {
            this.Sms_GetSignAsync(CorpID, LoginName, Password, TimeStamp, null);
        }
        
        /// <remarks/>
        public void Sms_GetSignAsync(long CorpID, string LoginName, string Password, string TimeStamp, object userState) {
            if ((this.Sms_GetSignOperationCompleted == null)) {
                this.Sms_GetSignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSms_GetSignOperationCompleted);
            }
            this.InvokeAsync("Sms_GetSign", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp}, this.Sms_GetSignOperationCompleted, userState);
        }
        
        private void OnSms_GetSignOperationCompleted(object arg) {
            if ((this.Sms_GetSignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sms_GetSignCompleted(this, new Sms_GetSignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sms_GetBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Balance")]
        public long Sms_GetBalance(long CorpID, string LoginName, string Password, string TimeStamp, out string ErrMsg) {
            object[] results = this.Invoke("Sms_GetBalance", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Sms_GetBalanceAsync(long CorpID, string LoginName, string Password, string TimeStamp) {
            this.Sms_GetBalanceAsync(CorpID, LoginName, Password, TimeStamp, null);
        }
        
        /// <remarks/>
        public void Sms_GetBalanceAsync(long CorpID, string LoginName, string Password, string TimeStamp, object userState) {
            if ((this.Sms_GetBalanceOperationCompleted == null)) {
                this.Sms_GetBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSms_GetBalanceOperationCompleted);
            }
            this.InvokeAsync("Sms_GetBalance", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp}, this.Sms_GetBalanceOperationCompleted, userState);
        }
        
        private void OnSms_GetBalanceOperationCompleted(object arg) {
            if ((this.Sms_GetBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sms_GetBalanceCompleted(this, new Sms_GetBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Mms_UpFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("MmsFileID")]
        public long Mms_UpFile(long CorpID, string LoginName, string Password, string TimeStamp, string Subject, long SmilType, MmsFileGroup[] MmsFileList, out string ErrMsg) {
            object[] results = this.Invoke("Mms_UpFile", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        Subject,
                        SmilType,
                        MmsFileList});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Mms_UpFileAsync(long CorpID, string LoginName, string Password, string TimeStamp, string Subject, long SmilType, MmsFileGroup[] MmsFileList) {
            this.Mms_UpFileAsync(CorpID, LoginName, Password, TimeStamp, Subject, SmilType, MmsFileList, null);
        }
        
        /// <remarks/>
        public void Mms_UpFileAsync(long CorpID, string LoginName, string Password, string TimeStamp, string Subject, long SmilType, MmsFileGroup[] MmsFileList, object userState) {
            if ((this.Mms_UpFileOperationCompleted == null)) {
                this.Mms_UpFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMms_UpFileOperationCompleted);
            }
            this.InvokeAsync("Mms_UpFile", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        Subject,
                        SmilType,
                        MmsFileList}, this.Mms_UpFileOperationCompleted, userState);
        }
        
        private void OnMms_UpFileOperationCompleted(object arg) {
            if ((this.Mms_UpFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Mms_UpFileCompleted(this, new Mms_UpFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Mms_GetFileStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public long Mms_GetFileStatus(long CorpID, string LoginName, string Password, string TimeStamp, long MmsFileID, out string ErrMsg, out string Title, out long Size, out string CreateTime) {
            object[] results = this.Invoke("Mms_GetFileStatus", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        MmsFileID});
            ErrMsg = ((string)(results[1]));
            Title = ((string)(results[2]));
            Size = ((long)(results[3]));
            CreateTime = ((string)(results[4]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Mms_GetFileStatusAsync(long CorpID, string LoginName, string Password, string TimeStamp, long MmsFileID) {
            this.Mms_GetFileStatusAsync(CorpID, LoginName, Password, TimeStamp, MmsFileID, null);
        }
        
        /// <remarks/>
        public void Mms_GetFileStatusAsync(long CorpID, string LoginName, string Password, string TimeStamp, long MmsFileID, object userState) {
            if ((this.Mms_GetFileStatusOperationCompleted == null)) {
                this.Mms_GetFileStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMms_GetFileStatusOperationCompleted);
            }
            this.InvokeAsync("Mms_GetFileStatus", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        MmsFileID}, this.Mms_GetFileStatusOperationCompleted, userState);
        }
        
        private void OnMms_GetFileStatusOperationCompleted(object arg) {
            if ((this.Mms_GetFileStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Mms_GetFileStatusCompleted(this, new Mms_GetFileStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Mms_Send", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Count")]
        public long Mms_Send(long CorpID, string LoginName, string Password, string TimeStamp, string AddNum, string Timer, MobileListGroup[] MobileList, long MmsFileID, out string ErrMsg, out MmsIDGroup[] MmsIDList) {
            object[] results = this.Invoke("Mms_Send", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        AddNum,
                        Timer,
                        MobileList,
                        MmsFileID});
            ErrMsg = ((string)(results[1]));
            MmsIDList = ((MmsIDGroup[])(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Mms_SendAsync(long CorpID, string LoginName, string Password, string TimeStamp, string AddNum, string Timer, MobileListGroup[] MobileList, long MmsFileID) {
            this.Mms_SendAsync(CorpID, LoginName, Password, TimeStamp, AddNum, Timer, MobileList, MmsFileID, null);
        }
        
        /// <remarks/>
        public void Mms_SendAsync(long CorpID, string LoginName, string Password, string TimeStamp, string AddNum, string Timer, MobileListGroup[] MobileList, long MmsFileID, object userState) {
            if ((this.Mms_SendOperationCompleted == null)) {
                this.Mms_SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMms_SendOperationCompleted);
            }
            this.InvokeAsync("Mms_Send", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        AddNum,
                        Timer,
                        MobileList,
                        MmsFileID}, this.Mms_SendOperationCompleted, userState);
        }
        
        private void OnMms_SendOperationCompleted(object arg) {
            if ((this.Mms_SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Mms_SendCompleted(this, new Mms_SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Mms_GetReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Count")]
        public long Mms_GetReport(long CorpID, string LoginName, string Password, string TimeStamp, out string ErrMsg, out MmsReportGroup[] MmsReportList) {
            object[] results = this.Invoke("Mms_GetReport", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp});
            ErrMsg = ((string)(results[1]));
            MmsReportList = ((MmsReportGroup[])(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Mms_GetReportAsync(long CorpID, string LoginName, string Password, string TimeStamp) {
            this.Mms_GetReportAsync(CorpID, LoginName, Password, TimeStamp, null);
        }
        
        /// <remarks/>
        public void Mms_GetReportAsync(long CorpID, string LoginName, string Password, string TimeStamp, object userState) {
            if ((this.Mms_GetReportOperationCompleted == null)) {
                this.Mms_GetReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMms_GetReportOperationCompleted);
            }
            this.InvokeAsync("Mms_GetReport", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp}, this.Mms_GetReportOperationCompleted, userState);
        }
        
        private void OnMms_GetReportOperationCompleted(object arg) {
            if ((this.Mms_GetReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Mms_GetReportCompleted(this, new Mms_GetReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Mms_GetRecv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Count")]
        public long Mms_GetRecv(long CorpID, string LoginName, string Password, string TimeStamp, out string ErrMsg, out string Mobile, out string RecvNum, out string AddNum, out string Subject, out string RecvTime, out MmsRecvFileGroup[] MmsRecvFileList) {
            object[] results = this.Invoke("Mms_GetRecv", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp});
            ErrMsg = ((string)(results[1]));
            Mobile = ((string)(results[2]));
            RecvNum = ((string)(results[3]));
            AddNum = ((string)(results[4]));
            Subject = ((string)(results[5]));
            RecvTime = ((string)(results[6]));
            MmsRecvFileList = ((MmsRecvFileGroup[])(results[7]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Mms_GetRecvAsync(long CorpID, string LoginName, string Password, string TimeStamp) {
            this.Mms_GetRecvAsync(CorpID, LoginName, Password, TimeStamp, null);
        }
        
        /// <remarks/>
        public void Mms_GetRecvAsync(long CorpID, string LoginName, string Password, string TimeStamp, object userState) {
            if ((this.Mms_GetRecvOperationCompleted == null)) {
                this.Mms_GetRecvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMms_GetRecvOperationCompleted);
            }
            this.InvokeAsync("Mms_GetRecv", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp}, this.Mms_GetRecvOperationCompleted, userState);
        }
        
        private void OnMms_GetRecvOperationCompleted(object arg) {
            if ((this.Mms_GetRecvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Mms_GetRecvCompleted(this, new Mms_GetRecvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_UpFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TaskFileID")]
        public long Task_UpFile(long CorpID, string LoginName, string Password, string TimeStamp, string Subject, long AutoDelete, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileData, out string ErrMsg) {
            object[] results = this.Invoke("Task_UpFile", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        Subject,
                        AutoDelete,
                        FileData});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_UpFileAsync(long CorpID, string LoginName, string Password, string TimeStamp, string Subject, long AutoDelete, byte[] FileData) {
            this.Task_UpFileAsync(CorpID, LoginName, Password, TimeStamp, Subject, AutoDelete, FileData, null);
        }
        
        /// <remarks/>
        public void Task_UpFileAsync(long CorpID, string LoginName, string Password, string TimeStamp, string Subject, long AutoDelete, byte[] FileData, object userState) {
            if ((this.Task_UpFileOperationCompleted == null)) {
                this.Task_UpFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_UpFileOperationCompleted);
            }
            this.InvokeAsync("Task_UpFile", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        Subject,
                        AutoDelete,
                        FileData}, this.Task_UpFileOperationCompleted, userState);
        }
        
        private void OnTask_UpFileOperationCompleted(object arg) {
            if ((this.Task_UpFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_UpFileCompleted(this, new Task_UpFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_DelFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrCode")]
        public long Task_DelFile(long CorpID, string LoginName, string Password, string TimeStamp, long TaskFileID, out string ErrMsg) {
            object[] results = this.Invoke("Task_DelFile", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskFileID});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_DelFileAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskFileID) {
            this.Task_DelFileAsync(CorpID, LoginName, Password, TimeStamp, TaskFileID, null);
        }
        
        /// <remarks/>
        public void Task_DelFileAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskFileID, object userState) {
            if ((this.Task_DelFileOperationCompleted == null)) {
                this.Task_DelFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_DelFileOperationCompleted);
            }
            this.InvokeAsync("Task_DelFile", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskFileID}, this.Task_DelFileOperationCompleted, userState);
        }
        
        private void OnTask_DelFileOperationCompleted(object arg) {
            if ((this.Task_DelFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_DelFileCompleted(this, new Task_DelFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_SmsSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TaskSmsID")]
        public long Task_SmsSend(long CorpID, string LoginName, string Password, string TimeStamp, string Content, long LongSms, long Priority, string AtTime, MobileFileGroup[] MobileList, out string ErrMsg) {
            object[] results = this.Invoke("Task_SmsSend", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        Content,
                        LongSms,
                        Priority,
                        AtTime,
                        MobileList});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_SmsSendAsync(long CorpID, string LoginName, string Password, string TimeStamp, string Content, long LongSms, long Priority, string AtTime, MobileFileGroup[] MobileList) {
            this.Task_SmsSendAsync(CorpID, LoginName, Password, TimeStamp, Content, LongSms, Priority, AtTime, MobileList, null);
        }
        
        /// <remarks/>
        public void Task_SmsSendAsync(long CorpID, string LoginName, string Password, string TimeStamp, string Content, long LongSms, long Priority, string AtTime, MobileFileGroup[] MobileList, object userState) {
            if ((this.Task_SmsSendOperationCompleted == null)) {
                this.Task_SmsSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_SmsSendOperationCompleted);
            }
            this.InvokeAsync("Task_SmsSend", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        Content,
                        LongSms,
                        Priority,
                        AtTime,
                        MobileList}, this.Task_SmsSendOperationCompleted, userState);
        }
        
        private void OnTask_SmsSendOperationCompleted(object arg) {
            if ((this.Task_SmsSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_SmsSendCompleted(this, new Task_SmsSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_GetSmsStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public long Task_GetSmsStatus(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID, out string ErrMsg, out long MobileCount, out long YFMobileCount, out string BeginTime, out string EndTime) {
            object[] results = this.Invoke("Task_GetSmsStatus", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskSmsID});
            ErrMsg = ((string)(results[1]));
            MobileCount = ((long)(results[2]));
            YFMobileCount = ((long)(results[3]));
            BeginTime = ((string)(results[4]));
            EndTime = ((string)(results[5]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_GetSmsStatusAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID) {
            this.Task_GetSmsStatusAsync(CorpID, LoginName, Password, TimeStamp, TaskSmsID, null);
        }
        
        /// <remarks/>
        public void Task_GetSmsStatusAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID, object userState) {
            if ((this.Task_GetSmsStatusOperationCompleted == null)) {
                this.Task_GetSmsStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_GetSmsStatusOperationCompleted);
            }
            this.InvokeAsync("Task_GetSmsStatus", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskSmsID}, this.Task_GetSmsStatusOperationCompleted, userState);
        }
        
        private void OnTask_GetSmsStatusOperationCompleted(object arg) {
            if ((this.Task_GetSmsStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_GetSmsStatusCompleted(this, new Task_GetSmsStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_SmsStop", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrCode")]
        public long Task_SmsStop(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID, out string ErrMsg) {
            object[] results = this.Invoke("Task_SmsStop", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskSmsID});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_SmsStopAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID) {
            this.Task_SmsStopAsync(CorpID, LoginName, Password, TimeStamp, TaskSmsID, null);
        }
        
        /// <remarks/>
        public void Task_SmsStopAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID, object userState) {
            if ((this.Task_SmsStopOperationCompleted == null)) {
                this.Task_SmsStopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_SmsStopOperationCompleted);
            }
            this.InvokeAsync("Task_SmsStop", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskSmsID}, this.Task_SmsStopOperationCompleted, userState);
        }
        
        private void OnTask_SmsStopOperationCompleted(object arg) {
            if ((this.Task_SmsStopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_SmsStopCompleted(this, new Task_SmsStopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_SmsStart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrCode")]
        public long Task_SmsStart(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID, out string ErrMsg) {
            object[] results = this.Invoke("Task_SmsStart", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskSmsID});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_SmsStartAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID) {
            this.Task_SmsStartAsync(CorpID, LoginName, Password, TimeStamp, TaskSmsID, null);
        }
        
        /// <remarks/>
        public void Task_SmsStartAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskSmsID, object userState) {
            if ((this.Task_SmsStartOperationCompleted == null)) {
                this.Task_SmsStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_SmsStartOperationCompleted);
            }
            this.InvokeAsync("Task_SmsStart", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskSmsID}, this.Task_SmsStartOperationCompleted, userState);
        }
        
        private void OnTask_SmsStartOperationCompleted(object arg) {
            if ((this.Task_SmsStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_SmsStartCompleted(this, new Task_SmsStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_MmsSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("TaskMmsID")]
        public long Task_MmsSend(long CorpID, string LoginName, string Password, string TimeStamp, long MmsFileID, long Priority, string AtTime, MobileFileGroup[] MobileList, out string ErrMsg) {
            object[] results = this.Invoke("Task_MmsSend", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        MmsFileID,
                        Priority,
                        AtTime,
                        MobileList});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_MmsSendAsync(long CorpID, string LoginName, string Password, string TimeStamp, long MmsFileID, long Priority, string AtTime, MobileFileGroup[] MobileList) {
            this.Task_MmsSendAsync(CorpID, LoginName, Password, TimeStamp, MmsFileID, Priority, AtTime, MobileList, null);
        }
        
        /// <remarks/>
        public void Task_MmsSendAsync(long CorpID, string LoginName, string Password, string TimeStamp, long MmsFileID, long Priority, string AtTime, MobileFileGroup[] MobileList, object userState) {
            if ((this.Task_MmsSendOperationCompleted == null)) {
                this.Task_MmsSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_MmsSendOperationCompleted);
            }
            this.InvokeAsync("Task_MmsSend", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        MmsFileID,
                        Priority,
                        AtTime,
                        MobileList}, this.Task_MmsSendOperationCompleted, userState);
        }
        
        private void OnTask_MmsSendOperationCompleted(object arg) {
            if ((this.Task_MmsSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_MmsSendCompleted(this, new Task_MmsSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_GetMmsStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Status")]
        public long Task_GetMmsStatus(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID, out string ErrMsg, out long MobileCount, out long YFMobileCount, out string BeginTime, out string EndTime) {
            object[] results = this.Invoke("Task_GetMmsStatus", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskMmsID});
            ErrMsg = ((string)(results[1]));
            MobileCount = ((long)(results[2]));
            YFMobileCount = ((long)(results[3]));
            BeginTime = ((string)(results[4]));
            EndTime = ((string)(results[5]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_GetMmsStatusAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID) {
            this.Task_GetMmsStatusAsync(CorpID, LoginName, Password, TimeStamp, TaskMmsID, null);
        }
        
        /// <remarks/>
        public void Task_GetMmsStatusAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID, object userState) {
            if ((this.Task_GetMmsStatusOperationCompleted == null)) {
                this.Task_GetMmsStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_GetMmsStatusOperationCompleted);
            }
            this.InvokeAsync("Task_GetMmsStatus", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskMmsID}, this.Task_GetMmsStatusOperationCompleted, userState);
        }
        
        private void OnTask_GetMmsStatusOperationCompleted(object arg) {
            if ((this.Task_GetMmsStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_GetMmsStatusCompleted(this, new Task_GetMmsStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_MmsStop", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrCode")]
        public long Task_MmsStop(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID, out string ErrMsg) {
            object[] results = this.Invoke("Task_MmsStop", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskMmsID});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_MmsStopAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID) {
            this.Task_MmsStopAsync(CorpID, LoginName, Password, TimeStamp, TaskMmsID, null);
        }
        
        /// <remarks/>
        public void Task_MmsStopAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID, object userState) {
            if ((this.Task_MmsStopOperationCompleted == null)) {
                this.Task_MmsStopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_MmsStopOperationCompleted);
            }
            this.InvokeAsync("Task_MmsStop", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskMmsID}, this.Task_MmsStopOperationCompleted, userState);
        }
        
        private void OnTask_MmsStopOperationCompleted(object arg) {
            if ((this.Task_MmsStopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_MmsStopCompleted(this, new Task_MmsStopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Task_MmsStart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ErrCode")]
        public long Task_MmsStart(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID, out string ErrMsg) {
            object[] results = this.Invoke("Task_MmsStart", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskMmsID});
            ErrMsg = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Task_MmsStartAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID) {
            this.Task_MmsStartAsync(CorpID, LoginName, Password, TimeStamp, TaskMmsID, null);
        }
        
        /// <remarks/>
        public void Task_MmsStartAsync(long CorpID, string LoginName, string Password, string TimeStamp, long TaskMmsID, object userState) {
            if ((this.Task_MmsStartOperationCompleted == null)) {
                this.Task_MmsStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_MmsStartOperationCompleted);
            }
            this.InvokeAsync("Task_MmsStart", new object[] {
                        CorpID,
                        LoginName,
                        Password,
                        TimeStamp,
                        TaskMmsID}, this.Task_MmsStartOperationCompleted, userState);
        }
        
        private void OnTask_MmsStartOperationCompleted(object arg) {
            if ((this.Task_MmsStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_MmsStartCompleted(this, new Task_MmsStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MobileListGroup {
        
        private string mobileField;
        
        private string msgIDField;
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MobileFileGroup {
        
        private long taskFileTypeField;
        
        private string taskFileIDField;
        
        /// <remarks/>
        public long TaskFileType {
            get {
                return this.taskFileTypeField;
            }
            set {
                this.taskFileTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TaskFileID {
            get {
                return this.taskFileIDField;
            }
            set {
                this.taskFileIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MmsRecvFileGroup {
        
        private string fileNameField;
        
        private string fileTypeField;
        
        private string fileIDField;
        
        private string fileLocationField;
        
        private byte[] fileDataField;
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FileID {
            get {
                return this.fileIDField;
            }
            set {
                this.fileIDField = value;
            }
        }
        
        /// <remarks/>
        public string FileLocation {
            get {
                return this.fileLocationField;
            }
            set {
                this.fileLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MmsReportGroup {
        
        private long mmsIDField;
        
        private long statusField;
        
        private string reportTimeField;
        
        private string exStatusField;
        
        /// <remarks/>
        public long MmsID {
            get {
                return this.mmsIDField;
            }
            set {
                this.mmsIDField = value;
            }
        }
        
        /// <remarks/>
        public long Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ReportTime {
            get {
                return this.reportTimeField;
            }
            set {
                this.reportTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ExStatus {
            get {
                return this.exStatusField;
            }
            set {
                this.exStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MmsIDGroup {
        
        private string mobileField;
        
        private long mmsIDField;
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public long MmsID {
            get {
                return this.mmsIDField;
            }
            set {
                this.mmsIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MmsFileGroup {
        
        private long playTimeField;
        
        private string image_FileNameField;
        
        private byte[] image_FileDataField;
        
        private string text_FileNameField;
        
        private string text_ContentField;
        
        private string audio_FileNameField;
        
        private byte[] audio_FileDataField;
        
        /// <remarks/>
        public long PlayTime {
            get {
                return this.playTimeField;
            }
            set {
                this.playTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Image_FileName {
            get {
                return this.image_FileNameField;
            }
            set {
                this.image_FileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Image_FileData {
            get {
                return this.image_FileDataField;
            }
            set {
                this.image_FileDataField = value;
            }
        }
        
        /// <remarks/>
        public string Text_FileName {
            get {
                return this.text_FileNameField;
            }
            set {
                this.text_FileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Text_Content {
            get {
                return this.text_ContentField;
            }
            set {
                this.text_ContentField = value;
            }
        }
        
        /// <remarks/>
        public string Audio_FileName {
            get {
                return this.audio_FileNameField;
            }
            set {
                this.audio_FileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Audio_FileData {
            get {
                return this.audio_FileDataField;
            }
            set {
                this.audio_FileDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SmsReportGroup {
        
        private long smsIDField;
        
        private long statusField;
        
        private string reportTimeField;
        
        private string exStatusField;
        
        /// <remarks/>
        public long SmsID {
            get {
                return this.smsIDField;
            }
            set {
                this.smsIDField = value;
            }
        }
        
        /// <remarks/>
        public long Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ReportTime {
            get {
                return this.reportTimeField;
            }
            set {
                this.reportTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ExStatus {
            get {
                return this.exStatusField;
            }
            set {
                this.exStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SmsRecvGroup {
        
        private string mobileField;
        
        private string recvNumField;
        
        private string addNumField;
        
        private string recvTimeField;
        
        private string contentField;
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string RecvNum {
            get {
                return this.recvNumField;
            }
            set {
                this.recvNumField = value;
            }
        }
        
        /// <remarks/>
        public string AddNum {
            get {
                return this.addNumField;
            }
            set {
                this.addNumField = value;
            }
        }
        
        /// <remarks/>
        public string RecvTime {
            get {
                return this.recvTimeField;
            }
            set {
                this.recvTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SmsIDGroup {
        
        private string mobileField;
        
        private long smsIDField;
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public long SmsID {
            get {
                return this.smsIDField;
            }
            set {
                this.smsIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Sms_SendCompletedEventHandler(object sender, Sms_SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sms_SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sms_SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SmsIDGroup[] SmsIDList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmsIDGroup[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Sms_GetRecvCompletedEventHandler(object sender, Sms_GetRecvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sms_GetRecvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sms_GetRecvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SmsRecvGroup[] SmsRecvList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmsRecvGroup[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Sms_GetReportCompletedEventHandler(object sender, Sms_GetReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sms_GetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sms_GetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SmsReportGroup[] SmsReportList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmsReportGroup[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Sms_GetSignCompletedEventHandler(object sender, Sms_GetSignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sms_GetSignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sms_GetSignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Sign {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Sms_GetBalanceCompletedEventHandler(object sender, Sms_GetBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sms_GetBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sms_GetBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Mms_UpFileCompletedEventHandler(object sender, Mms_UpFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Mms_UpFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Mms_UpFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Mms_GetFileStatusCompletedEventHandler(object sender, Mms_GetFileStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Mms_GetFileStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Mms_GetFileStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string CreateTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Mms_SendCompletedEventHandler(object sender, Mms_SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Mms_SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Mms_SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public MmsIDGroup[] MmsIDList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MmsIDGroup[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Mms_GetReportCompletedEventHandler(object sender, Mms_GetReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Mms_GetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Mms_GetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public MmsReportGroup[] MmsReportList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MmsReportGroup[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Mms_GetRecvCompletedEventHandler(object sender, Mms_GetRecvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Mms_GetRecvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Mms_GetRecvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string RecvNum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string AddNum {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string RecvTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public MmsRecvFileGroup[] MmsRecvFileList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MmsRecvFileGroup[])(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_UpFileCompletedEventHandler(object sender, Task_UpFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_UpFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_UpFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_DelFileCompletedEventHandler(object sender, Task_DelFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_DelFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_DelFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_SmsSendCompletedEventHandler(object sender, Task_SmsSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_SmsSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_SmsSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_GetSmsStatusCompletedEventHandler(object sender, Task_GetSmsStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_GetSmsStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_GetSmsStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long MobileCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public long YFMobileCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string BeginTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_SmsStopCompletedEventHandler(object sender, Task_SmsStopCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_SmsStopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_SmsStopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_SmsStartCompletedEventHandler(object sender, Task_SmsStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_SmsStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_SmsStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_MmsSendCompletedEventHandler(object sender, Task_MmsSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_MmsSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_MmsSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_GetMmsStatusCompletedEventHandler(object sender, Task_GetMmsStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_GetMmsStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_GetMmsStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long MobileCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public long YFMobileCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string BeginTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_MmsStopCompletedEventHandler(object sender, Task_MmsStopCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_MmsStopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_MmsStopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Task_MmsStartCompletedEventHandler(object sender, Task_MmsStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_MmsStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_MmsStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591